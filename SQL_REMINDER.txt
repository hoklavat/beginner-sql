*** STRUCTURED QUERY LANGUAGE (SQL) ***

[DATABASE]
- Database: system that allows to store and organize large amounts of data.
- Structure: tables; columns, rows.
- Platforms: postgre-sql, my-sql, maria-sql, microsoft-sql, microsoft-access, sqlite
- SQL: programming language used to communicate with database. case insensitive.

[SOFTWARE]
- SQL Server: PostgreSQL (https://www.postgresql.org/)
- Graphical User Interface: PGAdmin (https://www.pgadmin.org/)

[BASIC DATABASE OPERATIONS]
- Create: PGAdmin >> Servers >> PostgreSQL >> Databases (right-click) >> Create >> Database >> name >> Save
- Restore: Databases >> database (right-click) >> Restore >> select file >> Restore Options (Pre-Data/Post-Data/Data) >> Restore
- Query: Databases >> database (right-click) >> Query Tool
- Tables: Databases >> database >> Schemas >> Tables
- Query: Databases >> database

[CONDITIONAL OPERATORS]
- Equals (=)
- Greater Than (>)
- Less Than (<)
- Greater Than or Equal (>=)
- Less Than or Equal (<=)
- Not Equal (<>), (!=)
- Logical And (AND)
- Logical Or (OR)

[SELECT]
- query data from tables.
- asterisk (*) denotes all columns.
- SELECT column1, column2, ... FROM table1
- SELECT DISTINCT column1, column2, ... FROM table1 -- don't select duplicated data.
- SELECT column1, column2, ... FROM table1 WHERE conditions -- only select rows which satisfy conditions.
- COUNT: number of input rows that match a specific condition.
   - SELECT COUNT(*) from table1 -- count of rows in table.
   - SELECT COUNT(DISTINCT column1) from table1 -- count of rows having non-duplicated column1 values.
- LIMIT: limit number of rows.
- ORDER BY: sort the result set after query. sorts in ascending order by default.
   - SELECT column1, column2 FROM table1 ORDER BY column1 ASC/DESC -- sort query result by column1 ascending/descending order.
- BETWEEN: match a value against a range of values.
   - value BETWEEN low AND high -> value >= low AND value <= high -- values between low and high.
   - value NOT BETWEEN low AND high -> value < low AND value > high -- values not between low and high.
- IN: check if a value matches any value in a list of values.
   - value IN (value1, value2, ...)
   - value IN (SELECT value FROM table)
   - ... NOT IN ...
- LIKE: pattern matching using wildcard characters. % sequence of characters. _ single character.
   - SELECT column FROM table WHERE value LIKE '...%'
   - ILIKE for case insensitive query.
